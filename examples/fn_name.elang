class TestClass
  def initialize(value)
    @value = value
  end
  def empty!
    51
  end
  def empty?
    52
  end
  def value
    @value
  end
  def value=(v)
    @value = v
  end
  def +(v)
    @value + v
  end
  def -(v)
    @value - v
  end
  def *(v)
    @value * v
  end
  def /(v)
    @value / v
  end
  def &(v)
    @value & v
  end
  def |(v)
    @value | v
  end
  def <<(v)
    @value * 2
  end
  def >>(v)
    @value / 2
  end
  def [](index)
    #@value[index]
    53
  end
  def []=(index, v)
    #@value[index] = v
    54
  end
end

tc = TestClass.new
tc.value = 5
puts "tc.value = " + tc.value.to_s
puts "tc.empty! = " + (tc.empty!).to_s
puts "tc.empty? = " + (tc.empty?).to_s
puts "tc + 2 = " + (tc + 2).to_s
puts "tc - 1 = " + (tc - 1).to_s
puts "tc * 2 = " + (tc * 2).to_s
puts "tc / 2 = " + (tc / 2).to_s
puts "tc & 3 = " + (tc & 3).to_s
puts "tc & 6 = " + (tc & 6).to_s
puts "tc | 2 = " + (tc | 2).to_s
puts "tc << 2 = " + (tc << 2).to_s
puts "tc >> 2 = " + (tc >> 2).to_s
puts "tc[2] = " + (tc[2]).to_s
puts "tc[2] = 3 = " + (tc[2] = 3).to_s
